@import url('https://fonts.googleapis.com/css2?family=Arsenal:ital,wght@0,400;0,700;1,400;1,700&display=swap');
@import 'bootstrap';

:root {
    
    --bs-body-bg: #18181b !important;
    --bs-bg-dark: #18181b !important;

    --gray-900: #111111;
    --gray-700: #2e2e2e;
}

@font-face {
    font-family: 'Pathfinder-Icons';
    src: url('/Pathfinder-Icons.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

span.action {
    font-family: 'Pathfinder-Icons';
    font-variant: normal;
    font-weight: normal;
}

#app {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    text-align: center;
    /* Polkadot background styles */
    background-color: var(--gray-900);
    background-image: radial-gradient(var(--gray-700) 2px, transparent 2px);
    background-size: 30px 30px;
}

.arsenal {
    font-family: "Arsenal", sans-serif !important;
    font-weight: bold;
    font-style: italic;
}

main {
    flex: auto;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    max-width: 1280px;
    width: 100%;
    margin: 0 auto;
}

@media (max-width: 639px) {
    main {
        margin: 2rem;
    }
}

/* Persona-style button styling - updated version */
.dark-btn {
    position: relative;
    display: inline-block;
    color: #ffffff;
    background-color: var(--bs-body-bg);
    font-family: "Impact", "Arial Black", "Franklin Gothic Medium", sans-serif;
    text-transform: uppercase;
    letter-spacing: 1.5px;
    text-decoration: none;
    border: none;
    transform: skewX(-15deg);
    outline: 2px solid transparent;
    overflow: hidden;
    z-index: 1;
    transition: color 0.3s cubic-bezier(0.25, 0.1, 0.25, 1),
                outline-color 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Text inside button */
.dark-btn span {
    display: inline-block;
    transform: skewX(15deg);
    position: relative;
    z-index: 3;
}

/* Additional fix for icon alignment inside buttons */
.dark-btn i,
.dark-btn small {
    display: inline-block;
    transform: skewX(15deg);
    position: relative; 
    z-index: 3; 
}

.dark-btn > *:not(span):not(i):not(small) {
    display: inline-block;
    transform: skewX(15deg);
    position: relative;
    z-index: 3;
}

/* The animated background fill */
.dark-btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: translateX(-105%);
    z-index: 2;
    transition: transform 0.15s cubic-bezier(0.77, 0, 0.175, 1);
}

.dark-btn:hover {
    outline-color: #ffffff;
}

.dark-btn:hover::before {
    transform: translateX(0);
}

.dark-btn:active {
    transform: skewX(-15deg) scale(0.96);
    transition-duration: 0.08s;
}

/* --- Primary Persona Button (Red Accent) --- */
.dark-btn-primary::before {
    background-color: #ff003c;
}
.dark-btn-primary {
    outline-color: #ff003c;
}

.dark-btn-primary:hover,
.dark-btn-secondary:hover {
    color: #1a1a1a;
}

.dark-btn-primary:active::before {
    background-color: #e00034;
}

/* --- Secondary Persona Button (Blue Accent) --- */
.dark-btn-secondary::before {
    background-color: #00d0ff;
}
.dark-btn-secondary {
    outline-color: #00d0ff;
}

.dark-btn-secondary:active::before {
    background-color: #00d0ff;
}

.dark-btn-secondary:active {
    color: #f0f0f0;
}

/* --- Active Persona Button State --- */
/* Add .dark-btn-active to a .dark-btn (e.g., .dark-btn.dark-btn-primary.dark-btn-active) 
   to make it appear "on" or "current", drawing attention. */
.dark-btn.dark-btn-active {
    color: #1a1a1a; /* Dark text to contrast with the ::before fill, same as hover */
    outline-color: #ffffff; /* Ensure outline is visible, same as hover */
}

.dark-btn.dark-btn-active::before {
    transform: translateX(0); /* Make the ::before pseudo-element (the color fill) visible */
    /* The existing transition on .dark-btn::before will cause this to animate in when the class is added.
       If you want the active state to appear instantly without animation, you could add:
       transition: none; 
       or specifically target the transform property:
       transition: transform 0s; */
}

/* Ensure hover on an active button doesn't revert text color if other rules conflict */
.dark-btn.dark-btn-active:hover {
    color: #1a1a1a; /* Maintain dark text on hover */
    /* outline-color will be handled by .dark-btn:hover */
}

.form-control,
.input-group-text {
    background-color: var(--bs-body-bg) !important;
}